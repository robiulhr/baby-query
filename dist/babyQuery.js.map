{"mappings":"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","sources":["src/babyQuery.js","src/helpers.js","src/checkers.js","src/domManupulation/domManupulation.js","src/domManupulation/localhelpers.js","src/css/css.js","src/css/localhelpers.js"],"sourcesContent":["import helpers from './helpers.js'\nimport checkers from './checkers.js'\nimport domManupulation from './domManupulation/domManupulation.js'\nimport css from './css/css.js'\nconst { isValidElementSelector, isValidHtmlElement, isPlainObject, isFunction, isWindow, toType, isArrayLike, isEmptyObject } = checkers\nconst { createHtmlElementDynamically, handleDOMReady, myExtend } = helpers\nexport default (function (globalThis) {\n  /**\n   * BabyQuery Constructor function\n   * @param {String|HTMLElement|Function|null|undefined} selector to create or select elements on which all changes should apply\n   * @param {HTMLElement} context inside which the element should be created \n   * @returns {Object} contains all element selected or created uning the provided selector\n   */\n  function BabyQuery (selector, context) {\n    // if Developer doesn't use the new keyword\n    if (!(this instanceof BabyQuery)) {\n      return new BabyQuery(selector, context)\n    }\n    // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n    if (!selector) {\n      return this\n    }\n    // if Developer pass a css selector\n    if (typeof selector === 'string') {\n      // HANDLE: $(\".class\") , $(\"#id\") and more valid selector\n      if (isValidElementSelector(selector)) {\n        // selecting all element\n        this.nodes = (context || document).querySelectorAll(selector)\n        // HANDLE: $(html)\n      } else if (isValidHtmlElement(selector)) {\n        this.nodes = createHtmlElementDynamically(selector)\n        // HANDLE: $(html, props)\n        if (context) {\n          if (isPlainObject(context)) {\n            this.nodes.forEach((ele, i) => {\n              for (let prop in context) {\n                this.attr.call(ele, prop, context[prop])\n              }\n            })\n          }\n        }\n      }\n    } else if (typeof selector === 'function') {\n      handleDOMReady(selector)\n    }else if(selector instanceof HTMLElement){\n      this.nodes = [selector];\n    }\n    if (this.nodes?.length) {\n      this.length = this.nodes.length\n      // assinging all elements to the object\n      for (let i = 0; i < this.nodes?.length; i++) {\n        this[i] = this.nodes[i]\n      }\n    }\n  }\n  BabyQuery.fn = BabyQuery.prototype = {\n    /**\n     * .ready() waits until all document and scripts get loads\n     * @param {Function} callback which will wait to be load the dom and all other scripts \n     * \n     */\n    ready: function (callback) {\n      if (isFunction(callback)) {\n        handleDOMReady(callback)\n      }\n    }\n  }\n\n\n  BabyQuery.extend = BabyQuery.fn.extend = myExtend\n\n  BabyQuery.fn.extend(domManupulation,css)\n  \n  globalThis.BabyQuery = globalThis.$ = BabyQuery\n\n  return BabyQuery\n})('undefined' != typeof window ? window : global, undefined)\n","import checkers from './checkers'\nconst { isArrayLike, isEqualObject } = checkers\n\nexport default {\n  /**\n   * checks the document.readyState is completed ifso then call the funciton otherwise push it to domReadyQueue array to wait and once the DOMContentLoaded fire then call the funciton from the domReadyQueue array\n   * @param {Function} callback\n   *\n   */\n  handleDOMReady: function (callback) {\n    var domReadyQueue = []\n    document.readyState === 'complete' ? callback.call(document) : domReadyQueue.push(callback)\n    // running domReadyQueue funcitons after the dom loads.\n    document.addEventListener('DOMContentLoaded', function onDOMReady () {\n      document.removeEventListener('DOMContentLoaded', onDOMReady)\n      while (domReadyQueue.length) {\n        domReadyQueue.shift().call(document)\n      }\n    })\n  },\n  /**\n   * create html element from String\n   * @param {String} html Exp: \"\\<div>hello world\\</div>\"\n   * @returns {HTMLElement} returns the created html element from the String\n   */\n  createHtmlElementDynamically: function (html) {\n    var template = document.createElement('template')\n    template.innerHTML = html\n    return template.content.childNodes\n  },\n  /**\n   * Extends provided objects to the main object\n   * @returns {Object} return the main object\n   */\n  myExtend: function () {\n    for (let i = 0; i < arguments.length; i++) {\n      if (!arguments[i] || typeof arguments[i] !== 'object') {\n        continue\n      }\n      for (var key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          var value = arguments[i][key]\n\n          if (value !== undefined) {\n            if (typeof value === 'object' && value !== null) {\n              if (!this[key] || typeof this[key] !== 'object') {\n                this[key] = {}\n              }\n              this[key].merge(value)\n            } else {\n              this[key] = value\n            }\n          }\n        }\n      }\n    }\n\n    return this\n  },\n  /**\n   * separates value, unit and operator from the provided value\n   * @param {String} valueStr Exp: \"+=200px\"\n   * @returns {Object} Exp : { value: 200, unit:\"px\", operator:\"+=\" }\n   */\n  separateValueUnitOperators: function (valueStr) {\n    let value = ''\n    let unit = ''\n    let operator = ''\n    if (typeof valueStr !== 'string') return { value: valueStr, unit, operator }\n    for (let i = 0; i < valueStr.length; i++) {\n      if (!isNaN(valueStr[i])) {\n        value += valueStr[i]\n      } else if (valueStr[i] === '+' || valueStr[i] === '-' || valueStr[i] === '=') {\n        operator += valueStr[i]\n      } else {\n        unit += valueStr[i]\n      }\n    }\n    return { value: Number(value), unit, operator }\n  },\n  /**\n   * fillters the buplicate value which is reapeted in a row\n   * @param {Array} array Exp: [2,3,3,2,4,4,2,3,4]\n   * @returns {Array} Exp: [2,3,2,4,2,3,4]\n   * \n   */\n  fileterDuplicateInaRow: function (array) {\n    if (!isArrayLike(array)) return\n    let filteredArr = []\n    let outerCount = 0\n    while (outerCount < array.length) {\n      let value = array[outerCount]\n      let innerCount = outerCount + 1\n      if (isEqualObject(value, array[innerCount])) {\n        while (isEqualObject(value, array[innerCount])) {\n          innerCount++\n        }\n      }\n      filteredArr.push(value)\n      outerCount = innerCount\n    }\n    return filteredArr\n  }\n}\n","const checkers = {\n  /**\n   * checks the provided input is a value Css selector\n   * @param {String} input Exp: \"width\"\n   * @returns {Boolean} return true if the provided String(input) is valid CSS selector otherwise false\n   *\n   */\n  isValidElementSelector: function (input) {\n    try {\n      document.createDocumentFragment().querySelector(input)\n    } catch {\n      return false\n    }\n    return true\n  },\n  /**\n   * check the provided String is a valid html element\n   * @param {String} html String to create a html element from it.\n   * @returns {Boolean}  return true if the provided String(html) is valid html element otherwise false\n   */\n  isValidHtmlElement: html => {\n    // Check for extra characters before the HTML code\n    if (!/^\\s*</.test(html)) {\n      return false\n    }\n    // Check for extra characters after the HTML code\n    if (!/\\s*>$/.test(html)) {\n      return false\n    }\n    const tagRegex = /<\\/?\\w+((\\s+\\w+(=(\\\"|\\').*?(\\\"|\\'))?)*)\\s*\\/?>/g\n    const tagMatches = html.match(tagRegex)\n    if (tagMatches === null) {\n      return false\n    }\n    const tags = tagMatches.map(match => {\n      const parts = match.trim().split(/[\\s>]/)\n      const lastPart = match.match(/\\s*\\/\\s*>$/)?.[0]\n      return (parts[0] + lastPart).replace(/[<>]/g, '')\n    })\n    const stack = []\n\n    for (let i = 0; i < tags.length; i++) {\n      const tag = tags[i]\n      if (tag.startsWith('/')) {\n        if (stack.length === 0) {\n          return false\n        }\n        const lastTag = stack.pop()\n        if (lastTag !== tag.slice(1)) {\n          return false\n        }\n      } else if (tag.endsWith('/')) {\n        // Self-closing tag, do nothing\n      } else {\n        stack.push(tag)\n      }\n    }\n    return stack.length === 0\n  },\n  /**\n   * checks the provided input is a funciton or not\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is valid function otherwise false\n   */\n  isFunction: function (input) {\n    return typeof input === 'function' && typeof input.nodeType !== 'number' && typeof input.item !== 'function'\n  },\n  /**\n   * checks the provided input is a window object or not\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is window object otherwise false\n   *\n   */\n  isWindow: function (input) {\n    return input != null && input === input.window\n  },\n  /**\n   * checks the type of the input value\n   * @param {*} input\n   * @returns {String} return the type of the value(input)\n   */\n  toType: function (input) {\n    if (input == null) {\n      return input + ''\n    }\n    return typeof input === 'object' || typeof input === 'function' ? Object[Object.prototype.toString.call(input)] || 'object' : typeof input\n  },\n  /**\n   * checks the input value is a Array\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is Array otherwise false\n   */\n  isArrayLike: function (input) {\n    var length = !!input && 'length' in input && input.length,\n      type = checkers.toType(input)\n\n    if (checkers.isFunction(input) || checkers.isWindow(input)) {\n      return false\n    }\n\n    return type === 'array' || length === 0 || (typeof length === 'number' && length > 0 && length - 1 in input)\n  },\n  /**\n   * checks the input value is a plainObject\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is plainObject otherwise false\n   */\n  isPlainObject: function (input) {\n    var proto, Ctor\n\n    // Detect obvious negatives\n    if (!input || Object.prototype.toString.call(input) !== '[object Object]') {\n      return false\n    }\n\n    proto = Object.getPrototypeOf(input)\n\n    // Objects with no prototype (e.g., `Object.create( null )`) are plain\n    if (!proto) {\n      return true\n    }\n\n    // Objects with prototype are plain iff they were constructed by a global Object function\n    Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor\n    return typeof Ctor === 'function' && Object.prototype.toString.call(Ctor) === Object.prototype.toString.call(Object)\n  },\n  /**\n   * checks the input value is a emptyObject\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is emptyObject otherwise false\n   */\n  isEmptyObject: function (input) {\n    var name\n    for (name in input) {\n      return false\n    }\n    return true\n  },\n  /**\n   *\n   * @returns {Boolean} return true if all the provided values are equal objects otherwise false\n   *\n   */\n  isEqualObject () {\n    let first = JSON.stringify(arguments[0])\n    for (let i = 1; i < arguments.length; i++) {\n      if (first !== JSON.stringify(arguments[i])) return false\n    }\n    return true\n  },\n  /**\n   * checks the input value is a BabyQuery Object\n   * @param {*} input\n   * @returns {Boolean} return true if the provided value (input) is BabyQuery Object otherwise false\n   */\n  isBabyQueryObject (input) {\n    return typeof input === 'object' && !checkers.isPlainObject(input) && input.length && input.nodes\n  }\n}\n\nexport default checkers\n","import checkers from '../checkers'\nimport helpers from '../helpers'\nimport localhelpers from './localhelpers'\nconst { afterandAppendmethodRecursive, insertAfter, appendChild } = localhelpers\nconst { isFunction, isPlainObject, isValidHtmlElement, isBabyQueryObject } = checkers\nconst { createHtmlElementDynamically, fileterDuplicateInaRow } = helpers\n\nexport default {\n  /**\n   * Insert content, specified by the parameter, after each element in the set of matched elements.\n   * @param {HTMLElement|String|Function} element Exp:\n   * @returns {Object} return the BabyQuery object\n   */\n  after: function (element) {\n    // binding this to the afterMethodRecursive function\n    const afterandAppendmethodRecursiveBinded = afterandAppendmethodRecursive.bind(this)\n    if (isFunction(element)) {\n      for (let ind = 0; ind < this.length; ind++) {\n        insertAfter(createHtmlElementDynamically(element.call(this[ind]))[0], this[ind])\n      }\n    } else {\n      const filteredArguments = fileterDuplicateInaRow(arguments)\n      afterandAppendmethodRecursiveBinded(filteredArguments, 'after')\n    }\n    return this\n  },\n  /**\n   * \n   * @param {*} element \n   * @returns \n   */\n  append: function (element) {\n    // binding this to the  function\n    const afterandAppendmethodRecursiveBinded = afterandAppendmethodRecursive.bind(this)\n    if (isFunction(element)) {\n      for (let ind = 0; ind < this.length; ind++) {\n        appendChild(createHtmlElementDynamically(element.call(this[ind]))[0], this[ind])\n      }\n    } else {\n      const filteredArguments = fileterDuplicateInaRow(arguments)\n      afterandAppendmethodRecursiveBinded(filteredArguments, 'append')\n    }\n    return this\n  },\n  attr: function (name, value) {\n    if (typeof name === 'string') {\n      if (!value) {\n        return this['0']?.getAttribute(name)\n      } else if (typeof value === 'string') {\n        this['0']?.setAttribute(name, value)\n      } else if (isFunction(value)) {\n        for (let i = 0; i < this.length; i++) {\n          const currVal = this[i]?.getAttribute(name)\n          const newVal = value.call(this[i],i, currVal)\n          newVal && this[i]?.setAttribute(name, newVal)\n        }\n      }\n    } else if (isPlainObject(value)) {\n      for (let prop in value) {\n        this['0'].setAttribute(prop, value[prop])\n      }\n    }\n    return this\n  },\n  before: function () {},\n  empty: function () {},\n  get: function () {},\n  has: function () {},\n  html: function (input) {\n    if (!input) {\n      return this['0'].innerHTML\n    }\n    for (let i = 0; i < this.length; i++) {\n      if (typeof input === 'string' && isValidHtmlElement(input)) {\n        this[i].innerHTML = input\n      } else if (isFunction(input)) {\n        this[i].innerHTML = input(i, this[i].innerHTML)\n      } else if (isBabyQueryObject(input)) {\n        let tamplateElement = document.createElement('div')\n        for (let ind = 0; ind < input.length; ind++) {\n          tamplateElement.appendChild(input[ind])\n        }\n        this[i].innerHTML = tamplateElement.innerHTML\n      }\n    }\n\n    return this\n  },\n  prepend: function () {},\n  remove: function () {},\n  removeAttr: function () {},\n  text: function (text) {\n    if (!text) {\n      return this[0].textContent\n    } else if (typeof text === 'string') {\n      for (let i = 0; i < this.length; i++) {\n        this[i].textContent = text\n      }\n    } else if (isFunction(text)) {\n      for (let i = 0; i < this.length; i++) {\n        this[i].textContent = text.call(this[i],i, this[i].textContent)\n      }\n    }\n    return this\n  },\n  toggle: function () {}\n}\n","import checkers from '../checkers'\nimport helpers from '../helpers'\nconst { isBabyQueryObject, isArrayLike } = checkers\nconst { createHtmlElementDynamically } = helpers\nconst localhelpers = {\n  afterandAppendmethodRecursive: function (elementArray, methodName) {\n    for (let index = (methodName === \"after\" ? elementArray.length - 1: 0); (methodName === \"after\" ? index >= 0: index < elementArray.length); (methodName === \"after\" ? index--: index++)) {\n      if (typeof elementArray[index] === 'string') {\n        for (let ind = 0; ind < this.length; ind++) {\n          switch (methodName) {\n            case 'after':\n              localhelpers.insertAfter(createHtmlElementDynamically(elementArray[index])[0], this[ind])\n              break\n            case 'append':\n              localhelpers.appendChild(createHtmlElementDynamically(elementArray[index])[0], this[ind])\n              break\n          }\n        }\n      } else if (isBabyQueryObject(elementArray[index])) {\n        for (let ind = 0; ind < this.length; ind++) {\n          for (let i = 0; i < elementArray[index].length; i++) {\n            switch (methodName) {\n              case 'after':\n                localhelpers.insertAfter(elementArray[index][i], this[ind])\n                break\n              case 'append':\n                localhelpers.appendChild(elementArray[index][i], this[ind])\n                break\n            }\n          }\n        }\n      } else if (isArrayLike(elementArray[index]) && !elementArray[index].nodes) {\n        // call the afterandAppendmethodRecursive function again (recursively)\n        localhelpers.afterandAppendmethodRecursive.call(this, elementArray[index], methodName)\n      } else if (elementArray[index] instanceof HTMLElement) {\n        for (let ind = 0; ind < this.length; ind++) {\n          switch (methodName) {\n            case 'after':\n              localhelpers.insertAfter(elementArray[index], this[ind])\n              break\n            case 'append':\n              localhelpers.appendChild(elementArray[index], this[ind])\n              break\n          }\n        }\n      }\n    }\n  },\n  insertAfter: function (newNode, existingNode) {\n    // make a clone of the element\n    let cloneNode = newNode.cloneNode(true)\n    // remove the original element\n    // newNode.remove()\n    // insert the cloned element\n    existingNode.parentNode.insertBefore(cloneNode, existingNode.nextElementSibling)\n  },\n  appendChild (newNode, targetNode) {\n    // make a clone of the element\n    let cloneNode = newNode.cloneNode(true)\n    // remove the original element\n    // newNode.remove()\n    // append the cloned element\n    targetNode.appendChild(cloneNode)\n  }\n}\n\nexport default localhelpers\n","import checkers from '../checkers'\nimport localhelpers from './localhelpers'\nconst { isFunction, isPlainObject, isArrayLike } = checkers\nconst { cssValueIsFunction, setIncreaseDecreaseLength } = localhelpers\nexport default {\n  /**\n   * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\n   * @param {String | Object | Array} name Exp: \"width\" or {width:\"200px\",background:function(ele){return \"200px\"}} or [\"width\",\"background\"]\n   * @param {String | function} value Exp: \"200px\" or \"red\" or function(ind,ele){return \"+=200px\"}\n   * @returns {String|Object} if the second parameter is absent then it will return String otherwise will return the BabyQuery object\n   */\n  css: function (name, value) {\n    if (typeof name === 'string') {\n      // handle .css(\"width\",\"20px\") or .css(\"width\",\"+=20px\") or .css(\"width\",\"-=20px\")\n      if (typeof value === 'string') {\n        const isValueHaveNumber = (value.match(/[\\d\\.]+/) || [])[0]\n        if (isValueHaveNumber) {\n          for (let i = 0; i < this.length; i++) {\n            setIncreaseDecreaseLength(name, value, this[i])\n          }\n        }\n        // handle .css(\"background\",\"red\")\n        else if (!isValueHaveNumber) {\n          for (let i = 0; i < this.length; i++) {\n            this[i].style[name] = value\n          }\n        }\n      }\n      // handle .css(\"background\",function)\n      else if (isFunction(value)) {\n        cssValueIsFunction(name, value, this)\n      }\n      // handle .css(\"background\")\n      else if (!value) return window.getComputedStyle(this['0'])[name]\n    }\n    // handle .css([\"background\",\"width\"])\n    else if (isArrayLike(name)) {\n      let attrs = {}\n      for (let i = 0; i < name.length; i++) {\n        attrs[name[i]] = window.getComputedStyle(this['0'])[name[i]]\n      }\n      return attrs\n    }\n    // handle .css(object)\n    else if (isPlainObject(name)) {\n      for (let props in name) {\n        // .css({\"background\":function,\"width\":function})\n        if (isFunction(name[props])) {\n          cssValueIsFunction(props, name[props], this)\n        }\n        // .css({\"background\":\"red\",\"width\":\"20px\"})\n        else {\n          for (let i = 0; i < this.length; i++) {\n            this[i].style[props] = name[props]\n          }\n        }\n      }\n    }\n    return this\n  },\n  addClass: function () {},\n  removeClass: function () {},\n  hasClass: function () {},\n  toggleClass: function () {}\n}\n","import helpers from '../helpers'\nconst { separateValueUnitOperators } = helpers\nconst localhelpers = {\n  /**\n   * convert length value px to rem and rem to px\n   * @param {Number} value value wanna convert\n   * @param {String} fromUnit unit wanna convert from \n   * @param {String} toUnit unit wanna convert to \n   * @param {Number}[fonSize = parseFloat(getComputedStyle(document.documentElement).fontSize)] fontSize fonSize of the element \n   * @returns {Number} round the result to 3 decimal places \n   */\n  convertUnitsPxRem:function(value, fromUnit, toUnit, fontSize = parseFloat(getComputedStyle(document.documentElement).fontSize) ) {  \n    // check if the input value is a string and contains a unit\n    const match = value.toString().match(/^([\\d\\.]+)(\\w*)$/);\n    if (!match) {\n      throw new Error(`Invalid value: ${value}`);\n    }\n  \n    const numericValue = parseFloat(match[1]);\n    const unit = match[2] || fromUnit;\n  \n    // convert the input value to pixels if necessary\n    let pixels;\n    if (unit === 'px') {\n      pixels = numericValue;\n    } else if (unit === 'rem') {\n      pixels = numericValue * fontSize;\n    } else {\n      throw new Error(`Invalid unit: ${unit}`);\n    }\n  \n    // convert the pixels to the target unit\n    let result;\n    if (toUnit === 'px') {\n      result = pixels;\n    } else if (toUnit === 'rem') {\n      result = pixels / fontSize;\n    } else {\n      throw new Error(`Invalid target unit: ${toUnit}`);\n    }\n  \n    // round the result to 3 decimal places\n    return parseFloat(result.toFixed(3));\n  }\n  ,\n  /**\n   * when .css(name,value) value is a funciton \n   * @param {String} cssProp name passed in .css() method as property Exp: \"width\",\"backgroundColor\"\n   * @param {Function} callback function passed in .css() method as value\n   * @param {Array} elementArr array of element in Babyquery object\n   * \n   */\n  cssValueIsFunction: function (cssProp, callback, elementArr) {\n    for (let i = 0; i < elementArr.length; i++) {\n      const propValue = window.getComputedStyle(elementArr[i])[cssProp]\n      const givenValue = callback.call(elementArr[i], i, propValue)\n      localhelpers.setIncreaseDecreaseLength(cssProp, givenValue, elementArr[i])\n    }\n  },\n  /**\n   * count increamented or decremented value for a element's css property\n   * @param {Number} currValue value which is now of a dom element\n   * @param {Number} givenValue value which is given to increase or decrease from the current value\n   * @param {String} operator \"+=\" (have to increase the value) or \"-=\" (have to decrease the value) \n   * @returns {Number} calculated value after increasing or decreasing\n   * \n   */\n  increDecreLength: function (currValue, givenValue, operator) {\n    return operator.slice(0, 1) === '+' ? currValue + givenValue : currValue - givenValue;\n  },\n  /**\n   * set or increment or decrement element's css property \n   * @param {String} propName name passed in .css() method as property Exp: \"width\",\"backgroundColor\"\n   * @param {String} givenValue the value has been given in as .css() value Exp: \"+=200px\" or \"200px\" or \"200\" \n   * @param {HTMLElement} currElement html element which is now reffering.\n   * \n   */\n  setIncreaseDecreaseLength: function (propName, givenValue, currElement) {\n    let toIncreaseDecrease = false\n    const { value: givenValueParsed, unit: givenUnitParsed, operator: givenOparatorParsed } = separateValueUnitOperators(givenValue)\n    givenOparatorParsed && (toIncreaseDecrease = true)\n    const { value: currValue, unit: currentUnit } = separateValueUnitOperators(window.getComputedStyle(currElement)[propName])\n    if (toIncreaseDecrease) {\n      let newValue\n      let currValueConverted\n      let newUnit\n      if (currentUnit === givenUnitParsed) {\n        currValueConverted = currValue\n        newUnit = currentUnit || 'px'\n      } else if ((givenUnitParsed === 'px'  && currentUnit === 'rem') || givenUnitParsed === 'rem'  && currentUnit === 'px') {\n        const fontSize = parseFloat(getComputedStyle(currElement).fontSize)\n        currValueConverted = localhelpers.convertUnitsPxRem(currValue,currentUnit,givenUnitParsed,fontSize)\n        newUnit = givenUnitParsed\n      }else if (!givenUnitParsed) {\n        currValueConverted = currValue\n        newUnit = currentUnit || 'px'\n      } else {\n        currValueConverted = currValue\n        newUnit = 'px'\n      }\n      newValue = localhelpers.increDecreLength(currValueConverted, givenValueParsed, givenOparatorParsed) + newUnit\n      currElement.style[propName] = newValue\n    } else {\n      currElement.style[propName] = givenValueParsed + (givenUnitParsed || currentUnit)\n    }\n  }\n}\nexport default localhelpers\n"],"names":["helpers","checkers","domManupulation","css","isValidElementSelector","isValidHtmlElement","isPlainObject","isFunction","isWindow","toType","isArrayLike","isEmptyObject","createHtmlElementDynamically","handleDOMReady","myExtend","globalThis","BabyQuery","selector","context","nodes","document","querySelectorAll","forEach","ele","i","prop","attr","call","HTMLElement","length","fn","prototype","ready","callback","extend","$","window","global","undefined","isEqualObject","domReadyQueue","readyState","push","addEventListener","onDOMReady","removeEventListener","shift","html","template","createElement","innerHTML","content","childNodes","arguments","key","Object","hasOwnProperty","value","merge","separateValueUnitOperators","valueStr","unit","operator","isNaN","Number","fileterDuplicateInaRow","array","filteredArr","outerCount","innerCount","input","createDocumentFragment","querySelector","test","tagRegex","tagMatches","match","tags","map","parts","trim","split","lastPart","replace","stack","tag","startsWith","lastTag","pop","slice","endsWith","nodeType","item","toString","type","proto","Ctor","getPrototypeOf","constructor","name","first","JSON","stringify","isBabyQueryObject","localhelpers","afterandAppendmethodRecursive","insertAfter","appendChild","after","element","afterandAppendmethodRecursiveBinded","bind","ind","filteredArguments","append","getAttribute","setAttribute","currVal","newVal","before","empty","get","has","tamplateElement","prepend","remove","removeAttr","text","textContent","toggle","elementArray","methodName","index","newNode","existingNode","cloneNode","parentNode","insertBefore","nextElementSibling","targetNode","cssValueIsFunction","setIncreaseDecreaseLength","isValueHaveNumber","style","getComputedStyle","attrs","props","addClass","removeClass","hasClass","toggleClass","convertUnitsPxRem","fromUnit","toUnit","fontSize","parseFloat","documentElement","Error","numericValue","pixels","result","toFixed","cssProp","elementArr","propValue","givenValue","increDecreLength","currValue","propName","currElement","toIncreaseDecrease","givenValueParsed","givenUnitParsed","givenOparatorParsed","currentUnit","newValue","currValueConverted","newUnit"],"version":3,"file":"babyQuery.js.map","sourceRoot":"../"}